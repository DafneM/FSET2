Os botoes nao devem ficar ativos antes de ligar a maquina
Ligou - ativa botoes, configura

COMPONENTES: 


MODULOS:
* uart (uart-modbus) - 
mapa de enderecos, tabela do trabalho

envia
recebe
pode ser uma funcao generica que pode ser parametrizada, para enviar e receber qualquer coisa

* sensor bme (i2c)
* pid
* pwm (comunica direto com modulo da GPIO)
* gpio

* main

- init_gpio() - inicializa o circuito de potencia (resistor e a ventoinha)
- config_uart()
- init_i2c()
- zerar 3 leds()
- diga pra esp que estou desligado, nao estou em funcionamento e nao estou em modo curva

- LOOP PRINCIPAL
O cliente pergunta e o servidor responde
- le_comandos() -> envio para esp uma pergunta de um comando, que Ã© le comandos do usuario
RASP CLIENTE E ESP SERVIDOR
le comandos vai ter transmitir e receber

nao pode funcionar nada se nao tiver ligado
tem que guardar o estado do sistema, ligado ou desligado

CONSIDERANDO QUE ESTA ligado
quando clica em iniciar():
    liga led 
    ve se esta no modo manual ou de curva

    obs: se parar a curva tem que resfriar todo o sistema para depois subir dnv

    se tiver no modo manual e clicar em iniciar: 
        ler temperatura de referencia
        ler temperatura interna
        ajustar a diferenca
        (algoritmo )

    se tiver no modo curva:

CONTROLE DE TEMPERATURA:
    ler temperatura ambiente (bme)
    ler temperatura de referencia (tem que pegar o dado que ta no dashboard, que vem da esp), se atualizou algo atualize_temperatura_referencia() NO PID
    ler temperatura interna (tem que pegar da dashboard, esp)
    PID() ou seja pid_controle()
    atualiza pwm:
        if( > 0 ): liga pwm da resistencia
        if( < 0 ):
        se tiver entre 0 e 100%, ou liga resistencia ou liga ventoinha. NO VALOR NEGATIVO LIGA A VENTOINHA. nunca joga o valor de pwm pra ventoinha menor que 40%
    envia sinal de controle

o controle de temperatura esta dentro do loop    



